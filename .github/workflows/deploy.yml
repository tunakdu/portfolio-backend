name: Deploy to Production

on:
  push:
    branches: [ master ]

jobs:
  deploy:
    name: Deploy to server
    runs-on: ubuntu-latest

    steps:
    - name: Deploy to server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        port: ${{ secrets.PORT || 22 }}
        script: |
          cd /home/tunakdu/web/akduhan.com/public_html

          # Create secure backup of .env file
          BACKUP_FILE=".env.backup.$(date +%Y%m%d_%H%M%S)"
          cp .env "$BACKUP_FILE"
          
          # Make .env temporarily read-only
          chmod 444 .env
          
          # Reset any git tracking of .env
          git update-index --assume-unchanged .env || true
          
          # Stash any local changes to prevent conflicts
          git stash || true
          
          # Git pull latest changes
          git pull origin master
          
          # Force restore .env file from backup (ignore any git changes)
          cp "$BACKUP_FILE" .env
          chmod 644 .env
          
          # Ensure .env is never tracked by git going forward
          git update-index --assume-unchanged .env
          
          # Remove old backup files (keep last 5)
          ls -t .env.backup.* 2>/dev/null | tail -n +6 | xargs rm -f || true

          # Install/Update Composer dependencies
          composer install --no-dev --optimize-autoloader

          # Install/Update NPM dependencies and build assets
          npm install
          npm run build

          # Clear caches BEFORE running migrations
          php artisan config:clear
          php artisan cache:clear
          php artisan view:clear
          php artisan route:clear

          # Run database migrations
          php artisan migrate --force

          # Create storage symlink if not exists
          php artisan storage:link

          # Set proper permissions
          chmod -R 775 storage/
          chmod -R 775 bootstrap/cache/

          # Cache optimizations for production
          php artisan config:cache
          php artisan route:cache
          php artisan view:cache

          echo "ðŸš€ Deployment completed successfully!"